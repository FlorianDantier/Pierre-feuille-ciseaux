"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const socket_io_1 = __importDefault(require("socket.io"));
const tryingRegistrationController_1 = __importDefault(require("./controller/tryingRegistrationController"));
const tryingConnectionController_1 = __importDefault(require("./controller/tryingConnectionController"));
const disconnetController_1 = __importDefault(require("./controller/disconnetController"));
const wantToPlayController_1 = __importDefault(require("./controller/wantToPlayController"));
const haveChoosedController_1 = __importDefault(require("./controller/haveChoosedController"));
const SetOfRoom_1 = __importDefault(require("./class/SetOfRoom"));
const disconnectingController_1 = __importDefault(require("./controller/disconnectingController"));
const wantToPlayAgainstBotController_1 = __importDefault(require("./controller/wantToPlayAgainstBotController"));
const playAgainstBotController_1 = __importDefault(require("./controller/playAgainstBotController"));
const gameFinishedController_1 = __importDefault(require("./controller/gameFinishedController"));
const showStatsController_1 = __importDefault(require("./controller/showStatsController"));
const closeRoomController_1 = __importDefault(require("./closeRoomController"));
const wantToJoinTournamentController_1 = __importDefault(require("./controller/wantToJoinTournamentController"));
const startTournamentController_1 = __importDefault(require("./controller/startTournamentController"));
const nextRoundController_1 = __importDefault(require("./controller/nextRoundController"));
const io = socket_io_1.default();
const sizeTournament = 4;
let BotsRoom = new SetOfRoom_1.default(2, 1, 'Bots');
let UsersRoom = new SetOfRoom_1.default(10, 2, 'Users');
let TournamentRoom = new SetOfRoom_1.default(1, sizeTournament, 'Tournament');
let UserRoomForTournament = new SetOfRoom_1.default(sizeTournament / 2, 2, 'UserRoomForTournament');
let WinRoom = new SetOfRoom_1.default(1, 2, 'win');
let LooseRoom = new SetOfRoom_1.default(1, 2, 'loose');
io.on('connection', (socket) => {
    let sg = []; // sg = store game
    console.log('A user has logged');
    socket.on('disconnect', disconnetController_1.default);
    socket.on('disconnecting', disconnectingController_1.default(BotsRoom, socket));
    socket.on('tryingRegistration', tryingRegistrationController_1.default(socket));
    socket.on('tryingConnection', tryingConnectionController_1.default(socket, io));
    socket.on('wantToPlay', wantToPlayController_1.default(UsersRoom, io, socket));
    socket.on('wantToJoinTournament', wantToJoinTournamentController_1.default(TournamentRoom, socket, io));
    socket.on('StartTournament', startTournamentController_1.default(UserRoomForTournament, socket, io));
    socket.on('nextRound', nextRoundController_1.default(UserRoomForTournament, WinRoom, LooseRoom, socket, io));
    socket.on('wantToPlayAgainstBot', wantToPlayAgainstBotController_1.default(BotsRoom, socket));
    socket.on('PlayAgainstBot', playAgainstBotController_1.default(BotsRoom, socket, io));
    socket.on('haveChosen', haveChoosedController_1.default(socket, sg));
    socket.on('gameFinished', gameFinishedController_1.default(socket, io, sg));
    socket.on('showStats', showStatsController_1.default(io, socket));
    socket.on('closeRoom', closeRoomController_1.default(UsersRoom, socket));
});
io.listen(8080);
console.log('listening on port : 8080');
